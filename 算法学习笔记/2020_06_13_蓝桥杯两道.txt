第一题:
	资源限制
	时间限制：1.0s   内存限制：512.0MB
	问题描述
	　　对于给定整数数组a[],寻找其中最大值，并返回下标。
	输入格式
	　　整数数组a[],数组元素个数小于1等于100。输出数据分作两行：第一行只有一个数，表示数组元素个数；第二行为数组的各个元素。
	输出格式
	　　输出最大值，及其下标
	样例输入
	3
	3 2 1
	样例输出
	3 0
第一题解法:
    def main():
        N = int(input())
        a = list(map(int,input().strip().split(' ')))
        max_num = a[0]
        for i in range(N):
            if a[i] >= max_num:
                max_num = a[i]
                num = i
        print(max_num,num)
    if __name__ == '__main__':
        main()
第二题:
    试题 算法训练 Torry的困惑(基本型)
    资源限制
    时间限制：1.0s   内存限制：512.0MB
    问题描述
    　　Torry从小喜爱数学。一天，老师告诉他，像2、3、5、7……这样的数叫做质数。Torry突然想到一个问题，前10、100、1000、10000……个质数的乘积是多少呢？他把这个问题告诉老师。老师愣住了，一时回答不出来。于是Torry求助于会编程的你，请你算出前n个质数的乘积。不过，考虑到你才接触编程不久，Torry只要你算出这个数模上50000的值。
    输入格式
    　　仅包含一个正整数n，其中n<=100000。
    输出格式
    　　输出一行，即前n个质数的乘积模50000的值。
    样例输入
    1
    样例输出
    2
第二题解法:
    def main():
        N = int(input())
        n = 2
        res = 1
        while N > 0:
            x = 1
            while x <= n:
                if n % x == 0 and x < n and x !=1 :
                    break
                else:
                    x = x + 1
                if x == n:
                    res = res*n%50000
                    N = N - 1
                    break
            n = n + 1
        print(res)
    if __name__ == '__main__':
        main()