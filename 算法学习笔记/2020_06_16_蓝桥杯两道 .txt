第一题:
    试题 算法训练 矩阵乘法
         
    资源限制
    时间限制：1.0s   内存限制：512.0MB
    问题描述
    　　输入两个矩阵，分别是m*s，s*n大小。输出两个矩阵相乘的结果。
    输入格式
    　　第一行，空格隔开的三个正整数m,s,n（均不超过200）。
    　　接下来m行，每行s个空格隔开的整数，表示矩阵A（i，j）。
    　　接下来s行，每行n个空格隔开的整数，表示矩阵B（i，j）。
    输出格式
    　　m行，每行n个空格隔开的整数，输出相乘後的矩阵C（i，j）的值。
    样例输入
    2 3 2
    1 0 -1
    1 1 -3
    0 3
    1 2
    3 1
    样例输出
    -3 2
    -8 2

    提示
    矩阵C应该是m行n列，其中C(i,j)等于矩阵A第i行行向量与矩阵B第j列列向量的内积。
    例如样例中C(1,1)=(1,0,-1)*(0,1,3) = 1 * 0 +0*1+(-1)*3=-3

第一题解法:
    def main():
        m,s,n=map(int,input().strip().split(' '))
        A=[]
        B=[]
        for i in range(m):
            lst=list(map(int, input().strip().split(' ')))
            A.append(lst)
        for j in range(s):
            lst=list(map(int, input().strip().split(' ')))
            B.append(lst)
        C = []
        for i in range(m):
            res = []
            for j in range(n):
                res .append(1)
            C.append(res)
        for i in range(m):
            for j in range(n):
                x = A[i]
                y = [ele[j] for ele in B]

                C[i][j] = sum([x[i]*y[i] for i in range(len(x))])
        return C

    if __name__ == '__main__':
        res = main()
        for lst in res:
            ret = ''
            for ele in lst:
                ret = ret+str(ele)+' '
            print(ret)
        
第二题:
    试题 算法训练 Anagrams问题
         
    资源限制
    时间限制：1.0s   内存限制：512.0MB
    问题描述
    　　Anagrams指的是具有如下特性的两个单词：在这两个单词当中，每一个英文字母（不区分大小写）所出现的次数都是相同的。例如，“Unclear”和“Nuclear”、“Rimon”和“MinOR”都是Anagrams。编写一个程序，输入两个单词，然后判断一下，这两个单词是否是Anagrams。每一个单词的长度不会超过80个字符，而且是大小写无关的。
    　　输入格式：输入有两行，分别为两个单词。
    　　输出格式：输出只有一个字母Y或N，分别表示Yes和No。
    　　输入输出样例
    样例输入
    Unclear
    Nuclear
    样例输出
    Y
        
第二题解法:
    def main(str1,str2):
        res1 = {}
        res2 = {}
        for i in str1:
            res1[i] = str1.count(i)
        for i in str2:
            res2[i] = str2.count(i)
        if res1 == res2:
            return 'Y'
        else:
            return 'N'
    if __name__ == '__main__':
        str1 = input().strip().lower()
        str2 = input().strip().lower()
        print(main(str1,str2))




