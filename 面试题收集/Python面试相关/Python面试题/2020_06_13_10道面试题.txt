1. 一行代码实现1-100之和
    print(sum(range(1,101)))
    
2. 如何在函数内部修改全局变量
    a = 1
    def fun1():
        global a#利用global声明后可进行修改
        a=2
        print(a)
    fun1()
    print(a) 

3. 列出5个python标准库
    (1): os 操作系统相关库
    (2): sys 命令行
    (3): re 正则相关库
    (4): math 数学运算库
    (5): datetime 处理日期时间
    (6): random 随机数相关库
    
4. 字典如何删除键和合并两个字典
    dic1 = {1:'a',2:'b',3:'c'}
    dic2 = {4:'d',5:'e',6:'f'}
    del dic1[1]#按照键删除
    print(dic1)
    dic1.update(dic2)
    print(dic1)#更新字典,将另一个字典里的值更新到字典中,如果键相同,以后面的字典为主

5. python 的GIL
    (1):GIL是全局解释器锁,同一进程中如果有多个线程,一个线程在运行python程序时
        会占用python解释器,并加了一把锁GIL,使得其他线程无法运行,只有等该线程运
        行完毕之后才会运行.如果线程遇到i/o操作,就会解开锁,使得其他线程开始运行,
        因此在python中,多线程运行时是有先后顺序的,并不是同时运行的,如果想要让多
        个任务同时执行需要开启多进程.但是多进程中每个进程都会被系统分配资源,相当
        于每个进程都有一个python解释器,所有能实现多个任务同时执行,但是会使系统资
        源消耗过大.
        
6. python实现列表去重
    lst = [1,2,3,45,6,7,8,9,2,3,3,45,21,1]
    print(list(set(lst)))#转成集合数据类型,自动去重,然后再转回来
    
7.fun(*args,**kwargs)中的*args,**kwargs什么意思?
    def fun1(*args,**kwargs):#*args,接受多个非键值对参数,**kwargs接受多个键值对参数
        print(args)
        print(kwargs)
    def fun2(*a,**b):#args,kwargs只是用来接受的数据的形参,主要的是*和**
        print(a)
        print(b)
    fun1(1,2,3,a='1',b=2,)
    fun2(1,2,3,a='1',b=2,)
    
8. python2和python3的range(100)的区别:
    python2返回的是列表,python返回的是迭代器,节约内存

9. 一句话解释什么样的语言能够使用装饰器?
    函数可以作为传递参数的语言,可以使用装饰器

10. python内建数据类型
    (1): 数字 int
    (2): 字符串 str
    (3): 列表 list
    (4): 集合 set
    (5): 元组 tuple
    (6): 字典 dict
    (7): 布尔 bool